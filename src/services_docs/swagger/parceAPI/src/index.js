/*
 * service/service.proto
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: version not set
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.28-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ParcelApiAuditParcel', 'model/ParcelApiCreateParcelRequest', 'model/ParcelApiCreateParcelResponce', 'model/ParcelApiGetParcelAuditResponce', 'model/ParcelApiGetParcelResponce', 'model/ParcelApiParcel', 'model/ParcelApiSaveParcelSizeRequest', 'model/ParcelApiSaveParcelSizeResponce', 'model/ParcelApiSizes', 'model/ParcelApiUpdateParcelRequest', 'model/ParcelApiUpdateParcelResponce', 'model/ProtobufAny', 'model/RpcStatus', 'api/ParcelServiceApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/ParcelApiAuditParcel'), require('./model/ParcelApiCreateParcelRequest'), require('./model/ParcelApiCreateParcelResponce'), require('./model/ParcelApiGetParcelAuditResponce'), require('./model/ParcelApiGetParcelResponce'), require('./model/ParcelApiParcel'), require('./model/ParcelApiSaveParcelSizeRequest'), require('./model/ParcelApiSaveParcelSizeResponce'), require('./model/ParcelApiSizes'), require('./model/ParcelApiUpdateParcelRequest'), require('./model/ParcelApiUpdateParcelResponce'), require('./model/ProtobufAny'), require('./model/RpcStatus'), require('./api/ParcelServiceApi'));
  }
}(function(ApiClient, ParcelApiAuditParcel, ParcelApiCreateParcelRequest, ParcelApiCreateParcelResponce, ParcelApiGetParcelAuditResponce, ParcelApiGetParcelResponce, ParcelApiParcel, ParcelApiSaveParcelSizeRequest, ParcelApiSaveParcelSizeResponce, ParcelApiSizes, ParcelApiUpdateParcelRequest, ParcelApiUpdateParcelResponce, ProtobufAny, RpcStatus, ParcelServiceApi) {
  'use strict';

  /**
   * ERROR_UNKNOWN.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var Serviceserviceproto = require('index'); // See note below*.
   * var xxxSvc = new Serviceserviceproto.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new Serviceserviceproto.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new Serviceserviceproto.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new Serviceserviceproto.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version version not set
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The ParcelApiAuditParcel model constructor.
     * @property {module:model/ParcelApiAuditParcel}
     */
    ParcelApiAuditParcel: ParcelApiAuditParcel,
    /**
     * The ParcelApiCreateParcelRequest model constructor.
     * @property {module:model/ParcelApiCreateParcelRequest}
     */
    ParcelApiCreateParcelRequest: ParcelApiCreateParcelRequest,
    /**
     * The ParcelApiCreateParcelResponce model constructor.
     * @property {module:model/ParcelApiCreateParcelResponce}
     */
    ParcelApiCreateParcelResponce: ParcelApiCreateParcelResponce,
    /**
     * The ParcelApiGetParcelAuditResponce model constructor.
     * @property {module:model/ParcelApiGetParcelAuditResponce}
     */
    ParcelApiGetParcelAuditResponce: ParcelApiGetParcelAuditResponce,
    /**
     * The ParcelApiGetParcelResponce model constructor.
     * @property {module:model/ParcelApiGetParcelResponce}
     */
    ParcelApiGetParcelResponce: ParcelApiGetParcelResponce,
    /**
     * The ParcelApiParcel model constructor.
     * @property {module:model/ParcelApiParcel}
     */
    ParcelApiParcel: ParcelApiParcel,
    /**
     * The ParcelApiSaveParcelSizeRequest model constructor.
     * @property {module:model/ParcelApiSaveParcelSizeRequest}
     */
    ParcelApiSaveParcelSizeRequest: ParcelApiSaveParcelSizeRequest,
    /**
     * The ParcelApiSaveParcelSizeResponce model constructor.
     * @property {module:model/ParcelApiSaveParcelSizeResponce}
     */
    ParcelApiSaveParcelSizeResponce: ParcelApiSaveParcelSizeResponce,
    /**
     * The ParcelApiSizes model constructor.
     * @property {module:model/ParcelApiSizes}
     */
    ParcelApiSizes: ParcelApiSizes,
    /**
     * The ParcelApiUpdateParcelRequest model constructor.
     * @property {module:model/ParcelApiUpdateParcelRequest}
     */
    ParcelApiUpdateParcelRequest: ParcelApiUpdateParcelRequest,
    /**
     * The ParcelApiUpdateParcelResponce model constructor.
     * @property {module:model/ParcelApiUpdateParcelResponce}
     */
    ParcelApiUpdateParcelResponce: ParcelApiUpdateParcelResponce,
    /**
     * The ProtobufAny model constructor.
     * @property {module:model/ProtobufAny}
     */
    ProtobufAny: ProtobufAny,
    /**
     * The RpcStatus model constructor.
     * @property {module:model/RpcStatus}
     */
    RpcStatus: RpcStatus,
    /**
     * The ParcelServiceApi service constructor.
     * @property {module:api/ParcelServiceApi}
     */
    ParcelServiceApi: ParcelServiceApi
  };

  return exports;
}));
